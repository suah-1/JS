[
    {
        "id": 1,
        "question": "미들웨어(Middleware)에 대한 설명으로 틀린 것은?",
        "options": [
            "여러 운영체제에서 응용 프로그램들 사이에 위치한 소프트웨어이다.",
            "미들웨어의 서비스 이용을 위해 사용자와 정보 교환 방법 등의 내부 동작을 쉽게 확인할 수 있어야 한다.",
            "소프트웨어 컴포넌트를 연결하기 위한 준비된 인터프리터 구조를 제공한다.",
            "여러 컴포넌트를 1대1, 1대다, 다대다 등 여러 가지 형태로 연결이 가능하다."
        ],
        "correct": 2
    },
    {
        "id": 2,
        "question": "UI의 설계 지침으로 틀린 것은?",
        "options": [
            "이해하기 편하고 쉽게 사용할 수 있는 환경을 제공해야 한다.",
            "주요 기능을 메인 화면에 노출하여 조작이 쉬워야 한다.",
            "치명적인 오류에 대한 부정적인 사항은 사용자가 인지할 수 없도록 한다.",
            "사용자의 직무, 연령, 성별 등 다양한 계층을 수용해야 한다."
        ],
        "correct": 1
    },
    {
        "id": 3,
        "question": "익스트림 프로그래밍에 대한 설명으로 틀린 것은?",
        "options": [
            "대표적인 구조적 방법론 중 하나이다.",
            "소규모 개발 조직이 불확실하고 변경이 많은 요구를 접하였을 때 적절한 방법이다.",
            "익스트림 프로그래밍을 구동시키는 원리는 상식적인 원리와 경험을 최대한 끌어 올리는 것이다.",
            "구체적인 실천 방법을 정의하고 있으며, 개발 문서 보다는 소스코드에 중점을 둔다."
        ],
        "correct": 1
    },
    {
        "id": 4,
        "question": "유스케이스(Use Case)의 구성 요소 간의 관계에 포함되지 않는 것은?",
        "options": [
            "연관",
            "확장장",
            "구체화",
            "일반화"
        ],
        "correct": 3
    },
    {
        "id": 5,
        "question": "요구사항 분석에서 비기능적(Nonfunctional) 요구에 대한 설명으로 옳은 것은?",
        "options": [
            "시스템의 처리량(Throughput), 반응 시간 등의 성능 요구나 품질 요구는 비기능적 요구에 해당하지 않는다.",
            "'차량 대여 시스템이 제공하는 모든 화면이 3초 이내에 사용자에게 보여야 한다'는 비기능적 요구이다.",
            "시스템 구축과 관련된 안전, 보안에 대한 요구사항들은 비기능적 요구에 해당하지 않는다.",
            "'금융 시스템은 조회, 인출, 입금, 송금의 기능이 있어야 한다'는 비기능적 요구이다."
        ],
        "correct": 2
    },
    {
        "id": 6,
        "question": "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?",
        "options": [
            "Package Diagram",
            "State Transition Diagram",
            "Deployment Diagram",
            "Entity-Relationship Diagram"
        ],
        "correct": 4
    },
    {
        "id": 7,
        "question": "미들웨어(Middleware)에 대한 설명으로 틀린 것은?",
        "options": [
            "여러 운영체제에서 응용 프로그램들 사이에 위치한 소프트웨어이다.",
            "미들웨어의 서비스 이용을 위해 사용자가 정보 교환 방법등의 내부 동작을 쉽게 확인할 수 있어야 한다.",
            "소프트웨어 컴포넌트를 연결하기 위한 준비된 인프라 구조를 제공한다.",
            "여러 컴포넌트를 1대 1, 1대 다, 다대 다 등 여러 가지 형태로 연결이 가능하다."
        ],
        "correct": 2
    },
    {
        "id": 8,
        "question": "UI의 설계 지침으로 틀린 것은?",
        "options": [
            "이해하기 편하고 쉽게 사용할 수 있는 환경을 제공해야 한다.",
            "주요 기능을 메인 화면에 노출하여 조작이 쉽도록 하여야 한다.",
            "치명적인 오류에 대한 부정적인 사항은 사용자가 인지할 수 없도록 한다.",
            "사용자의 직무, 연령, 성별 등 다양한 계층을 수용하여야 한다."
        ],
        "correct": 3
    },
    {
        "id": 9,
        "question": "객체지향 개념에서 다형성(Polymorphism)과 관련한 설명으로 틀린 것은?",
        "options": [
            "다형성은 현재 코드를 변경하지 않고 새로운 클래스를 쉽게 추가할 수 있게 한다.",
            "다형성이란 여러 가지 형태를 가지고 있다는 의미로, 여러 형태를 받아들일 수 있는 특징을 말한다.",
            "메소드 오버라이딩(Overriding)은 상위 클래스에서 정의한 일반 메소드의 구현을 하위 클래스에서 무시하고 재정의할 수 있다.",
            "메소드 오버로딩(Overloading)의 경우 매개 변수 타입은 동일하지만 메소드명을 다르게 함으로써 구현, 구분할 수 있다."
        ],
        "correct": 4
    },
    {
        "id": 10,
        "question": "객체에 대한 설명으로 틀린 것은?",
        "options": [
            "객체는 상태, 동작, 고유 식별자를 가진 모든 것이라 할 수 있다.",
            "객체는 공통 속성을 공유하는 클래스들의 집합이다.",
            "객체는 필요한 자료 구조와 이에 수행되는 함수들을 가진 하나의 독립된 존재이다.",
            "객체의 상태는 속성값에 의해 정의된다."
        ],
        "correct": 2
    },
    {
        "id": 11,
        "question": "속성과 관련된 연산(Operation)을 클래스 안에 묶어서 하나로 취급하는 것을 의미하는 객체지향 개념은?",
        "options": [
            "Inheritance",
            "Class",
            "Encapsulation",
            "Association"
        ],
        "correct": 3
    },
    {
        "id": 12,
        "question": "애자일(Agile) 프로세스 모델에 대한 설명으로 틀린 것은?",
        "options": [
            "변화에 대한 대응보다는 자세한 계획을 중심으로 소프트웨어를 개발한다.",
            "프로세스와 도구 중심이 아닌 개개인과의 상호소통을 통해 의견을 수렴한다.",
            "협상과 계약보다는 고객과의 협력을 중시한다.",
            "문서 중심이 아닌, 실행 가능한 소프트웨어를 중시한다."
        ],
        "correct": 1
    },
    {
        "id": 13,
        "question": "명백한 역할을 가지고 독립적으로 존재할 수 있는 시스템의 부분으로 넓은 의미에서는 재사용되는 모든 단위라고 볼 수 있으며, 인터페이스를 통해서만 접근할 수 있는 것은?",
        "options": [
            "Model",
            "Sheet",
            "Component",
            "Cell"
        ],
        "correct": 3
    },
    {
        "id": 14,
        "question": "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때, 구조 패턴이 아닌 것은?",
        "options": [
            "Adapter 패턴",
            "Bridge 패턴",
            "Builder 패턴",
            "Proxy 패턴"
        ],
        "correct": 3
    },
    {
        "id": 15,
        "question": "UI와 관련된 기본 개념 중 하나로, 시스템의 상태와 사용자의 지시에 대한 효과를 보여주어 사용자가 명령에 대한 진행 상황과 표시된 내용을 해석할 수 있도록 도와주는 것은?",
        "options": [
            "Feedback",
            "Posture",
            "Module",
            "Hash"
        ],
        "correct": 1
    },
    {
        "id": 16,
        "question": "통신을 위한 프로그램을 생성하여 포트를 할당하고, 클라이언트의 통신 요청 시 클라이언트와 연결하는 내·외부 송·수신 연계기술은?",
        "options": [
            "DB링크 기술",
            "소켓 기술",
            "스크럼 기술",
            "프로토타입 기술"
        ],
        "correct": 2
    },
    {
        "id": 17,
        "question": "객체지향 개념에서 연관된 데이터와 함수를 함께 묶어 외부와 경계를 만들고 필요한 인터페이스만을 밖으로 드러내는 과정은?",
        "options": [
            "메시지(Message)",
            "캡슐화(Encapsulation)",
            "다형성(Polymorphism)",
            "상속(Inheritance)"
        ],
        "correct": 2
    },
    {
        "id": 18,
        "question": "GoF(Gangs of Four) 디자인 패턴의 생성패턴에 속하지 않는 것은?",
        "options": [
            "추상 팩토리(Abstract Factory)",
            "빌더(Builder)",
            "어댑터(Adapter)   ",
            "싱글턴(Singleton)"
        ],
        "correct": 3
    },
    {
        "id": 19,
        "question": "바람직한 소프트웨어 설계 지침이 아닌 것은?",
        "options": [
            "모듈의 기능을 예측할 수 있도록 정의한다.",
            "이식성을 고려한다.",
            "적당한 모듈의 크기를 유지한다.",
            "가능한 모듈을 독립적으로 생성하고 결합도를 최대화한다."
        ],
        "correct": 4
    },
    {
        "id": 20,
        "question": "현행 시스템 분석에서 고려하지 않아도 되는 항목은?",
        "options": [
            "DBMS 분석",
            "네트워크 분석",
            "운영체제 분석",
            "인적 자원 분석"
        ],
        "correct": 4
    },
    {
        "id": 21,
        "question": "다음 중 요구사항 모델링에 활용되지 않는 것은?",
        "options": [
            "애자일(Agile) 방법",
            "유스케이스 다이어그램(Use Case Diagram)",
            "시퀀스 다이어그램(Sequence Diagram)",
            "단계 다이어그램(Phase Diagram)"
        ],
        "correct": 4
    },
    {
        "id": 22,
        "question": "디자인 패턴을 이용한 소프트웨어 재사용으로 얻어지는 장점이 아닌 것은?",
        "options": [
            "소프트웨어 코드의 품질을 향상시킬 수 있다.",
            "개발 프로세스를 무시할 수 있다.",
            "개발자들 사이의 의사소통을 원활하게 할 수 있다.",
            "소프트웨어의 품질과 생산성을 향상시킬 수 있다."
        ],
        "correct": 2
    },
    {
        "id": 23,
        "question": "스택에 대한 설명으로 틀린 것은?",
        "options": [
            "입출력이 한쪽 끝으로만 제한된 리스트이다.",
            "Head(front)와 Tail(rear)의 2개 포인터를 갖고 있다.",
            "LIFO 구조이다.",
            "더 이상 삭제할 데이터가 없는 상태에서 데이터를 삭제하면 언더플로(Underflow)가 발생한다."
        ],
        "correct": 2
    },
    {
        "id": 24,
        "question": "디지털 저작권 관리(DRM)에 사용되는 기술요소가 아닌 것은?",
        "options": [
            "키관리",
            "방화벽",
            "암호화화",
            "크랙방지"
        ],
        "correct": 2
    },
    {
        "id": 25,
        "question": "다음 중 블랙박스 검사 기법은?",
        "options": [
            "경계값 분석",
            "조건 검사",
            "기초 경로 검사",
            "루프 검사"
        ],
        "correct": 1
    },
    {
        "id": 26,
        "question": "이진 검색 알고리즘에 대한 설명으로 틀린 것은?",
        "options": [
            "탐색 효율이 좋고 탐색 시간이 적게 소요된다.",
            "검색할 데이터가 정렬되어 있어야 한다.",
            "피보나치 수열에 따라 다음에 비교할 대상을 선정하여 검색한다.",
            "비교횟수를 거듭할 때마다 검색 대상이 되는 데이터의 수가 절반으로 줄어든다."
        ],
        "correct": 3
    },
    {
        "id": 27,
        "question": "테스트 케이스에 일반적으로 포함되는 항목이 아닌 것은?",
        "options": [
            "테스트 조건",
            "테스트 데이터",
            "테스트 비용",
            "예상 결과"
        ],
        "correct": 3
    },
    {
        "id": 28,
        "question": "소프트웨어 설치 매뉴얼에 포함될 항목이 아닌 것은?",
        "options": [
            "제품 소프트웨어 개요",
            "설치 관련 파일",
            "프로그램 삭제",
            "소프트웨어 개발 기간"
        ],
        "correct": 4
    },
    {
        "id": 29,
        "question": "뷰(VIEW)에 대한 설명으로 옳지 않은 것은?",
        "options": [
            "DBA는 보안 측면에서 뷰를 활용할 수 있다.",
            "뷰 위에 또 다른 뷰를 정의할 수 있다.",
            "뷰에 대한 삽입, 갱신, 삭제 연산 시 제약사항이 따르지 않는다.",
            "독립적인 인덱스를 가질 수 없다."
        ],
        "correct": 3
    },
    {
        "id": 30,
        "question": "E-R 다이어그램의 표기법으로 옳지 않은 것은?",
        "options": [
            "개체타입 - 사각형",
            "속성 - 타원",
            "관계집합 - 삼각형",
            "개체타입과 속성을 연결 – 선"
        ],
        "correct": 3
    },
    {
        "id": 31,
        "question": "알고리즘 설계 기법으로 거리가 먼 것은?",
        "options": [
            "Divide and Conquer    ",
            "Greedy",
            "Static Block.",
            "Backtracking"
        ],
        "correct": 3
    },
    {
        "id": 32,
        "question": "제품 소프트웨어의 형상 관리 역할로 틀린 것은?",
        "options": [
            "형상 관리를 통해 이전 리버전이나 버전에 대한 정보에 접근 가능하여 배포본 관리에 유용    ",
            "불필요한 사용자의 소스 수정 제한",
            "프로젝트 개발비용을 효율적으로 관리",
            "동일한 프로젝트에 대해 여러 개발자 동시 개발 가능"
        ],
        "correct": 3
    },
    {
        "id": 33,
        "question": "제품 소프트웨어 패키징 도구 활용 시 고려사항이 아닌 것은?",
        "options": [
            "제품 소프트웨어의 종류에 적합한 암호화 알고리즘을 고려한다.",
            "추가로 다양한 이기종 연동을 고려한다.",
            "사용자 편의성을 위한 복잡성 및 비효율성 문제를 고려한다.",
            "내부 콘텐츠에 대한 보안은 고려하지 않는다."
        ],
        "correct": 4
    },
    {
        "id": 34,
        "question": "디지털 저작권 관리(DRM) 기술과 거리가 먼 것은?",
        "options": [
            "콘텐츠 암호화 및 키 관리",
            "콘텐츠 식별체계 표현",
            "콘텐츠 오류 감지 및 복구",
            "라이센스 발급 및 관리"
        ],
        "correct": 3
    },
    {
        "id": 35,
        "question": "물리데이터 저장소의 파티션 설계에서 파티션 유형으로 옳지 않은 것은?",
        "options": [
            "범위분할(Range Partitioning)",
            "해시분할(Hash Partitioning)",
            "조합분할(Composite Partitioning)",
            "유닛분할(Unit Partitioning)"
        ],
        "correct": 4
    },
    {
        "id": 36,
        "question": "저작권 관리 구성 요소에 대한 설명이 틀린 것은?",
        "options": [
            "콘텐츠 제공자(Contents Provider) : 콘텐츠를 제공하는 저작권자",
            "콘텐츠 분배자(Contents Distributor) : 콘텐츠를 메타 데이터와 함께 배포 가능한 단위로 묶는 기능",
            "클리어링 하우스(Clearing House) : 키 관리 및 라이선스 발급 관리",
            "DRM 컨트롤러 : 배포된 콘텐츠의 이용 권한을 통제"
        ],
        "correct": 2
    },
    {
        "id": 37,
        "question": " 블랙박스 테스트 기법으로 거리가 먼 것은?",
        "options": [
            "기초 경로 검사",
            "동치 클래스 분해",
            "경계값 분석",
            "원인 결과 그래프"
        ],
        "correct": 1
    },
    {
        "id": 38,
        "question":"해싱함수 중 레코드 키를 여러 부분으로 나누고, 나눈 부분의 각 숫자를 더하거나 XOR한 값을 홈 주소로 사용하는 방식은?",
        "options": [
            "제산법",
            "폴딩법",
            "기수변환법",
            "숫자분석법"
        ],
        "correct": 2
    },
    {
        "id": 39,
        "question":"알파, 베타 테스트와 가장 밀접한 연관이 있는 테스트 단계는?",
        "options": [
            "단위 테스트",
            "인수 테스트",
            "통합 테스트",
            "시스템 테스트"
        ],
        "correct": 2
    },
    {
        "id": 40,
        "question":"디지털 저작권 관리(DRM) 기술과 거리가 먼 것은?",
        "options": [
            "콘텐츠 암호화 및 키 관리",
            "콘텐츠 식별체계 표현",
            "콘텐츠 오류 감지 및 복구",
            "라이선스 발급 및 관리"
        ],
        "correct": 3
    },
    {
        "id": 41,
        "question":"릴레이션 R의 모든 결정자(determinant)가 후보키이면 그 릴레이션 R은 어떤 정규형에 속하는가?",
        "options": [
            "제 1 정규형",
            "제 2 정규형",
            "보이스/코드 정규형",
            "제 4 정규형"
        ],
        "correct": 4
    },
    {
        "id": 42,
        "question":"데이터베이스에 영향을 주는 생성, 읽기, 갱신, 삭제 연산으로 프로세스와 테이블 간에 매트릭스를 만들어서 트랜잭션을 분석하는 것은?",
        "options": [
            "CASE 분석",
            "일치 분석",
            "CRUD 분석   ",
            "연관성 분석"
        ],
        "correct": 3
    },
    {
        "id": 43,
        "question":"정규화된 엔티티, 속성, 관계를 시스템의 성능 향상과 개발 운영의 단순화를 위해 중복, 통합, 분리 등을 수행하는 데이터 모델링 기법은?",
        "options": [
            "인덱스정규화",
            "반정규화",
            "집단화   ",
            "머징"
        ],
        "correct": 2
    },
    {
        "id": 44,
        "question":"학생 테이블을 생성한 후, 성별 필드가 누락되어 이를 추가하려고 한다. 이에 적합한 SQL 명령어는?",
        "options": [
            "INSERT",
            "ALTER",
            "DROP",
            "MODIFY"
        ],
        "correct": 2
    },
    {
        "id": 45,
        "question":"정규화의 필요성으로 거리가 먼 것은?",
        "options": [
            "데이터 구조의 안정성 최대화",
            "중복 데이터의 활성화",
            "수정, 삭제 시 이상현상의 최소화",
            "테이블 불일치 위험의 최소화"
        ],
        "correct": 2
    },
    {
        "id": 46,
        "question": "프로세스가 실행되면서 하나의 페이지를 일정시간 동안 집중적으로 액세스하는 현상은?",
        "options": [
            "구역성(locality)",
            "스래싱(thrashing)",
            "워킹세트(Working set)",
            "프리페이징(prepaging)"
        ],
        "correct": 1
    },
    {
        "id": 47,
        "question": "UNIX에서 파일 사용 권한 지정에 관한 명령어는?",
        "options": [
            "mv",
            "ls",
            "chmod",
            "fork"
        ],
        "correct": 3
    },
    {
        "id": 48,
        "question": "운영체제의 프로세스(Process)에 대한 설명으로 옳지 않은 것은?",
        "options": [
            "트랩 오류, 프로그램 요구, 입ㆍ출력 인터럽트에 대해 조치를 취한다.",
            "비동기적 행위를 일으키는 주체로 정의할 수 있다.",
            "실행중인 프로그램을 말한다.",
            "프로세스는 각종 자원을 요구한다."
        ],
        "correct": 1
    },
    {
        "id": 49,
        "question": "공유자원을 어느 시점에서 단지 한 개의 프로세스만이 사용할 수 있도록 하며, 다른 프로세스가 공유자원에 대하여 접근하지 못하게 제어하는 기법은?",
        "options": [
            "mutual exclusion",
            "critical section",
            "deadlock",
            "scatter loading"
        ],
        "correct": 1
    },
    {
        "id": 50,
        "question": "운영체제의 역할로 가장 옳지 않은 것은?",
        "options": [
            "사용자 인터페이스 제공",
            "입ㆍ출력에 대한 보조역할 수행",
            "사용자들 간 하드웨어 자원의 공동 사용",
            "원시프로그램을 목적프로그램으로 변환"
        ],
        "correct": 4
    }

]
